(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n}\r\n\r\n.main-wrap {\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  margin-top: 15%;\r\n  background-color: white;\r\n  box-shadow: 5px 5px 5px 5px #989;\r\n  border-radius: 8px;\r\n}\r\n\r\nbutton {\r\n  background-color: rgb(245, 238, 238);\r\n  border: 1px black solid;\r\n  height: 35px;\r\n}\r\n\r\nh2 {\r\n  padding-bottom: 27px;\r\n}\r\n\r\n.hader-sec {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 20px;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n}\r\n\r\nimg {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\n.listitems-wrap {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-items: center;\r\n}\r\n\r\n.checkbox {\r\n  height: 22px;\r\n}\r\n\r\nli {\r\n  padding-left: 10px;\r\n  padding-bottom: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n#input-field {\r\n  height: 35px;\r\n}\r\n\r\n.main-item-wrap {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\nhr {\r\n  background-color: rgb(245, 238, 238);\r\n}\r\n\r\n.editBox {\r\n  display: none;\r\n  width: 70%;\r\n  height: 30px;\r\n}\r\n\r\n.trash-and-edit-flx {\r\n  display: flex;\r\n}\r\n\r\n.trash-icn {\r\n  color: red;\r\n  font-size: 30px;\r\n}\r\n\r\n.trashbtn {\r\n  border-color: white;\r\n  background-color: white;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,eAAe;EACf,uBAAuB;EACvB,gCAAgC;EAChC,kBAAkB;AACpB;;AAEA;EACE,oCAAoC;EACpC,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,qBAAqB;AACvB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,UAAU;EACV,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,uBAAuB;AACzB",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n}\r\n\r\n.main-wrap {\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  margin-top: 15%;\r\n  background-color: white;\r\n  box-shadow: 5px 5px 5px 5px #989;\r\n  border-radius: 8px;\r\n}\r\n\r\nbutton {\r\n  background-color: rgb(245, 238, 238);\r\n  border: 1px black solid;\r\n  height: 35px;\r\n}\r\n\r\nh2 {\r\n  padding-bottom: 27px;\r\n}\r\n\r\n.hader-sec {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 20px;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n}\r\n\r\nimg {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\n.listitems-wrap {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-items: center;\r\n}\r\n\r\n.checkbox {\r\n  height: 22px;\r\n}\r\n\r\nli {\r\n  padding-left: 10px;\r\n  padding-bottom: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n#input-field {\r\n  height: 35px;\r\n}\r\n\r\n.main-item-wrap {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\nhr {\r\n  background-color: rgb(245, 238, 238);\r\n}\r\n\r\n.editBox {\r\n  display: none;\r\n  width: 70%;\r\n  height: 30px;\r\n}\r\n\r\n.trash-and-edit-flx {\r\n  display: flex;\r\n}\r\n\r\n.trash-icn {\r\n  color: red;\r\n  font-size: 30px;\r\n}\r\n\r\n.trashbtn {\r\n  border-color: white;\r\n  background-color: white;\r\n}\r\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],d=t.base?c[0]+t.base:c[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var p=e(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var h=o(u,t);t.byIndex=s,r.splice(s,0,{identifier:A,updater:h,references:1})}a.push(A)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);r[s].references--}for(var c=t(n,o),d=0;d<i.length;d++){var l=e(i[d]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}i=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r);var t={};(()=>{e.d(t,{Z:()=>v});var n=e(379),r=e.n(n),o=e(795),i=e.n(o),a=e(569),s=e.n(a),c=e(565),d=e.n(c),l=e(216),A=e.n(l),p=e(589),u=e.n(p),h=e(426),m={};m.styleTagTransform=u(),m.setAttributes=d(),m.insert=s().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=A(),r()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;const f=()=>{document.querySelectorAll("input[type=checkbox]").forEach((n=>{n.addEventListener("change",(()=>{n.checked?(v.list[n.id].completed=!0,localStorage.setItem("tasks",JSON.stringify(v.list))):(v.list[n.id].completed=!1,localStorage.setItem("tasks",JSON.stringify(v.list)))}))}))};let g=()=>{};const x=new class{constructor(){this.list=localStorage.getItem("tasks")?JSON.parse(localStorage.getItem("tasks")):[]}removetask(n){this.list=this.list.filter((r=>r.index!=n)),localStorage.setItem("tasks",JSON.stringify(this.list))}addtask(n){this.list.push(n),localStorage.setItem("tasks",JSON.stringify(this.list))}},E=document.querySelector("#input-field"),b=()=>{x.list.forEach(((n,r)=>{n.index=r,localStorage.setItem("tasks",JSON.stringify(x.list))}))},y=()=>{document.querySelectorAll("li img").forEach((n=>{n.addEventListener("click",(()=>{const r=n.parentNode.parentNode.querySelector("input[class=checkbox]").id,e=`${r}box`;document.getElementById(e).style.cssText="display: block;";const t=`${r}d`;document.getElementById(t).style.cssText="display: none;";const o=document.getElementById(e);o.addEventListener("keyup",(n=>{"13"===n.code&&(x.list[r].description=o.value,localStorage.setItem("tasks",JSON.stringify(x.list)),document.getElementById(e).style.cssText="display: none;",document.getElementById(t).style.cssText="display: block;",g(),f())}))}))}))};y();const C=()=>{document.querySelectorAll("li button").forEach((n=>{n.addEventListener("click",(()=>{const r=n.parentNode.parentNode.parentNode.parentNode.querySelector("input[type=checkbox]:checked").id;x.removetask(r),g(),f()}))}))};g=()=>{const n=document.getElementById("to-do-list");let r="";x.list.sort(((n,r)=>n.index-r.index)).forEach(((n,e)=>{r+=`\n     <li  id=${e}t class="taskitems">\n    <div class="main-item-wrap">\n    <div  class="listitems-wrap" >\n    <input type="checkbox" name="checkboxtask" id=${e} class="checkbox" ${n.completed?"checked":"not"} ><p id=${e}d> ${n.description} </p>\n      <input type="text" class="editBox" placeholder="${n.description}" id=${e}box>\n    </div>\n   \n    <div>\n    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Edit_icon_%28the_Noun_Project_30184%29.svg/150px-Edit_icon_%28the_Noun_Project_30184%29.svg.png?20161202215740" id=${e}e alt="edit"  class="edit">\n    <button type="button" class="trashbtn"><b class="trash-icn">🗑</b></button>\n</div>\n    </div>\n    <br>\n    \n    <hr>\n    </li>  `})),n.innerHTML=r,y(),C(),f(),b()},C(),E.addEventListener("keyup",(n=>{"13"===n.code&&((()=>{const n=E.value.trim();E.value="";const r=x.list.length;x.addtask({index:r,description:n,completed:!1}),g(),f()})(),C())})),g(),document.querySelector(".clear").addEventListener("click",(()=>{const n=[];document.querySelectorAll("input[type=checkbox]:checked").forEach((r=>{const e=r.parentNode.parentNode.parentNode,t=e.querySelector("input[class=checkbox]").id;x.removetask(t),n.push(t),e.remove()})),g(),b()})),f();const v=x})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,